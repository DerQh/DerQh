from IPython.display import clear_output
def display_board(board):
    clear_output()
    print('  |   |  ')
    print(''+ board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('--|---|---')
    print('  |   | ')
    print(''+ board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('  |   | ')
    print('--|---|---')
    print(''+ board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('  |   | ')
board = ['anything','X','X','X','O','O','O','X','X','X']

print(display_board(board))
#player inpuit that can take a player and asigne their marker as X or O 
def player_input():
    marker = ""
    while not (marker == 'O' or marker =='X'):
        marker = input('Player 1; Do you want to be X or O   ').upper()
    if marker == 'X':
        return ('X','O')
    else:
        return ('O','X')


##fWrite a function that takes, in the board list object, a marker ('X' or 'O'), and a desired position (number 1-9) and assigns it to the board.
def place_marker(board,marker,position):
    board[position]=marker 
## Write a function that takes in a board and a mark (X or O) and then checks to see if that mark has won.
def win_check(board,mark):
    return((board[7] == mark and board[8] == mark and board[9] == mark) or 
    (board[4] == mark and board[5] == mark and board[6] == mark) or
    (board[1] == mark and board[2] == mark and board[3] == mark) or
    (board[7] == mark and board[4] == mark and board[1] == mark) or
    (board[8] == mark and board[5] == mark and board[2] == mark) or
    (board[9] == mark and board[6] == mark and board[3] == mark) or
    (board[7] == mark and board[5] == mark and board[3] == mark) or
    (board[9] == mark and board[5] == mark and board[1] == mark))
#use the random function to randomly select the first player 
import random 
def choose_first ():
    if random.randint(0,1) == 0:
       return 'Player 1'
    else: 
        return 'Player 2'


#A function that returns a boolean if the space on the board is available

def space_check(board,position):
    return board[position] == ' '

def full_board_check(board):
    for i in range(1,10):
        if space_check(board,i):
            return False 
    return True

def player_choice(board):
    position = ' '
    while position not in '1,2,3,4,5,6,7,8,9'.split() or not space_check(board,int(position)):
        position = input("Choose your next position: (1 - 9)  ")
    return int(position)

def replay():
    return input('Do you want to play again ? ')

print("Welcome to Tic TacToe ")
while True:
    theBoard = [' ']*10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + "Will go first")

    game_on = True
    while game_on:
        if turn == "Player 1":
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard,player1_marker,position)

            if win_check(theBoard,player1_marker):
                display_board(theBoard)
                print("Congratulations. Player 1 wins the Game !!! ")
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print("The Game is a DRAW")
                    break 
                else:
                    turn = "Player 2"

        if turn == "Player 2":
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard,player2_marker,position)

            if win_check(theBoard,player1_marker):
                display_board(theBoard)
                print("Congratulations. Player 2 wins the Game !!! ")
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print("The Game is a DRAW")
                    break 
                else:
                    turn = "Player 1"
        if not replay():
            break 